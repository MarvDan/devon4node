:toc: macro

ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
endif::[]

toc::[]
:idprefix:
:idseperator: -
:reproducible:
:source-highligter: rouge
:listing-caption: Listing

= Importing your ESLint reports into SonarQube

With devon4node, you can easily generate ESLint reports and import them into SonarQube. All you need are the CLIs of the link:https://docs.sonarqube.org/latest/analysis/scan/sonarscanner/[SonarQube Scanner] and link:https://eslint.org/docs/user-guide/command-line-interface[ESLint], which can be installed via npm:

- `npm i eslint`
- `npm i sonarqube-scanner`

=== Configuring the ESLint analysis

You can configure the ESLint analysis parameters in an `.eslintrc` file. If you created your node project using the devon4node CLI, this file will already have been created. If you want to make further adjustments to it, have a look at the link:https://eslint.org/docs/user-guide/configuring[ESLint documentation].

To run the analysis and generate a report, simply execute the command `eslint -f json src/\**/*.ts > report.json` inside the base directory of your project. Additional information to customization options can be found link:https://eslint.org/docs/user-guide/command-line-interface[here]. All the issues found in this project will be written to the `report.json` and can now be imported into SonarQube.

=== Configuring SonarQube

To connect to your SonarQube instance and specify the path to your report, you will need a `sonar-project.properties` file, containing at least the following three properties:

- `sonar.host.url=` The url of your SonarQube instance 
- `sonar.projectKey=` Unique key of the project
- `sonar.eslint.reportPaths=` Path to the report file that is to be imported

Specifying further properties like the project name or its version are recommended, see the link:https://docs.sonarqube.org/latest/analysis/analysis-parameters/[SonarQube documentation] for further reading on analysis parameters.

For the import of your report, you need to run an analysis by executing the command `sonar-scanner`. To avoid duplicated issues, you can associate an empty TypeScript quality profile with your project in the server configurations of your SonarQube instance. 